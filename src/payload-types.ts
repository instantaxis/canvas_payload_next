/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    contacts: Contact;
    'dietary-restrictions': DietaryRestriction;
    drinkMenuItems: DrinkMenuItem;
    drinkSubcategories: DrinkSubcategory;
    'employee-ratings': EmployeeRating;
    features: Feature;
    'hotspot-logins': HotspotLogin;
    incidents: Incident;
    jobs: Job;
    locations: Location;
    managerReports: ManagerReport;
    messages: Message;
    'message-types': MessageType;
    qrFeedback: QrFeedback;
    questions: Question;
    reviewKeywords: ReviewKeyword;
    reviews: Review;
    serverReports: ServerReport;
    shiftTypes: ShiftType;
    upgrades: Upgrade;
    'upgrade-types': UpgradeType;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    contacts: ContactsSelect<false> | ContactsSelect<true>;
    'dietary-restrictions': DietaryRestrictionsSelect<false> | DietaryRestrictionsSelect<true>;
    drinkMenuItems: DrinkMenuItemsSelect<false> | DrinkMenuItemsSelect<true>;
    drinkSubcategories: DrinkSubcategoriesSelect<false> | DrinkSubcategoriesSelect<true>;
    'employee-ratings': EmployeeRatingsSelect<false> | EmployeeRatingsSelect<true>;
    features: FeaturesSelect<false> | FeaturesSelect<true>;
    'hotspot-logins': HotspotLoginsSelect<false> | HotspotLoginsSelect<true>;
    incidents: IncidentsSelect<false> | IncidentsSelect<true>;
    jobs: JobsSelect<false> | JobsSelect<true>;
    locations: LocationsSelect<false> | LocationsSelect<true>;
    managerReports: ManagerReportsSelect<false> | ManagerReportsSelect<true>;
    messages: MessagesSelect<false> | MessagesSelect<true>;
    'message-types': MessageTypesSelect<false> | MessageTypesSelect<true>;
    qrFeedback: QrFeedbackSelect<false> | QrFeedbackSelect<true>;
    questions: QuestionsSelect<false> | QuestionsSelect<true>;
    reviewKeywords: ReviewKeywordsSelect<false> | ReviewKeywordsSelect<true>;
    reviews: ReviewsSelect<false> | ReviewsSelect<true>;
    serverReports: ServerReportsSelect<false> | ServerReportsSelect<true>;
    shiftTypes: ShiftTypesSelect<false> | ShiftTypesSelect<true>;
    upgrades: UpgradesSelect<false> | UpgradesSelect<true>;
    'upgrade-types': UpgradeTypesSelect<false> | UpgradeTypesSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  first_name: string;
  last_name: string;
  phone?: string | null;
  employee_id?: string | null;
  roles?: ('admin' | 'store_manager' | 'shift_manager' | 'foh_employee' | 'boh_employee' | 'user')[] | null;
  status?: ('active' | 'inactive' | 'on_leave' | 'terminated') | null;
  locations?: (number | Location)[] | null;
  primary_location?: (number | null) | Location;
  employment_details?: {
    hire_date?: string | null;
    termination_date?: string | null;
    employment_type?: ('full_time' | 'part_time' | 'seasonal' | 'contract') | null;
    hourly_rate?: number | null;
  };
  profile_photo?: (number | null) | Media;
  jobs?: (number | Job)[] | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "locations".
 */
export interface Location {
  id: number;
  name: string;
  address: string;
  city: string;
  state: string;
  zip: string;
  phone?: string | null;
  email?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  caption?: string | null;
  uploadedBy: number | User;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    tablet?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "jobs".
 */
export interface Job {
  id: number;
  name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contacts".
 */
export interface Contact {
  id: number;
  first_name: string;
  last_name: string;
  email?: string | null;
  phone?: string | null;
  company?: string | null;
  contact_type: 'customer' | 'vendor' | 'contractor' | 'other';
  toast_id?: string | null;
  brevo_id?: string | null;
  vip_id?: number | null;
  associated_locations?: (number | Location)[] | null;
  associated_messages?: (number | Message)[] | null;
  visit_frequency?: ('first_time' | 'occasional' | 'regular' | 'vip') | null;
  last_visit?: string | null;
  total_visits?: number | null;
  average_spend?: number | null;
  preferred_location?: (number | null) | Location;
  notes?: string | null;
  marketing_consent?: boolean | null;
  birthday?: string | null;
  anniversary?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Customer messages and inquiries
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "messages".
 */
export interface Message {
  id: number;
  status?: ('new' | 'in_progress' | 'resolved' | 'archived') | null;
  priority?: ('low' | 'normal' | 'high' | 'urgent') | null;
  /**
   * Message subject line
   */
  subject: string;
  from_name: string;
  from_email: string;
  from_phone?: string | null;
  /**
   * Related location (if applicable)
   */
  location?: (number | null) | Location;
  /**
   * Type of message (e.g., General Inquiry, Complaint).
   */
  message_type: number | MessageType;
  /**
   * Customer message content
   */
  message: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Internal staff notes (not visible to customer)
   */
  internal_notes?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Staff member assigned to handle this message
   */
  assigned_to?: (number | null) | User;
  response_sent?: boolean | null;
  response_date?: string | null;
  /**
   * Files attached to the message
   */
  attachments?: (number | Media)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage different types of customer messages (e.g., General Inquiry, Complaint).
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "message-types".
 */
export interface MessageType {
  id: number;
  name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage common dietary restrictions and allergies.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "dietary-restrictions".
 */
export interface DietaryRestriction {
  id: number;
  /**
   * e.g., Gluten-Free, Vegan, Nut Allergy, Dairy-Free
   */
  name: string;
  /**
   * Optional: Provide more details about this restriction.
   */
  description?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "drinkMenuItems".
 */
export interface DrinkMenuItem {
  id: number;
  name: string;
  description?: string | null;
  price: number;
  category: number | DrinkSubcategory;
  active?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "drinkSubcategories".
 */
export interface DrinkSubcategory {
  id: number;
  name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * Employee performance ratings from managers
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "employee-ratings".
 */
export interface EmployeeRating {
  id: number;
  /**
   * Employee being rated
   */
  employee_id: number | User;
  location_id: number | Location;
  data_date: string;
  /**
   * Rating from 1-5 stars
   */
  rating: number;
  /**
   * Associated manager report (if applicable)
   */
  manager_report_id?: (number | null) | ManagerReport;
  /**
   * Notes about employee performance
   */
  employee_notes?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Internal management notes (not visible to employee)
   */
  internal_notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "managerReports".
 */
export interface ManagerReport {
  id: number;
  title: string;
  date: string;
  manager: number | User;
  location: number | Location;
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "features".
 */
export interface Feature {
  id: number;
  name: string;
  enabled?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * WiFi hotspot login data and customer information
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "hotspot-logins".
 */
export interface HotspotLogin {
  id: number;
  /**
   * Location where the login occurred
   */
  location: number | Location;
  /**
   * Customer name provided during login (optional)
   */
  customer_name?: string | null;
  /**
   * Customer email provided during login (optional)
   */
  customer_email?: string | null;
  /**
   * Customer consented to marketing communications
   */
  marketing_consent?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "incidents".
 */
export interface Incident {
  id: number;
  title: string;
  description?: string | null;
  date: string;
  location: number | Location;
  reportedBy: number | User;
  status?: ('open' | 'in_progress' | 'closed') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "qrFeedback".
 */
export interface QrFeedback {
  id: number;
  rating: number;
  comment?: string | null;
  location: number | Location;
  user?: (number | null) | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * Custom questions to be displayed on server and manager reports
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "questions".
 */
export interface Question {
  id: number;
  status?: ('active' | 'inactive' | 'archived') | null;
  /**
   * Sort order for display
   */
  sort?: number | null;
  /**
   * The question text to display
   */
  question: string;
  /**
   * When this question should be displayed
   */
  shift_timing?: ('am' | 'pm' | 'any') | null;
  /**
   * Which roles should see this question
   */
  shift_selection?: ('bartender' | 'server' | 'foh_support' | 'shift_manager' | 'store_manager')[] | null;
  /**
   * Minimum character count for answers
   */
  min_characters?: number | null;
  /**
   * Locations where this question should appear (leave empty for all locations)
   */
  locations?: (number | Location)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviewKeywords".
 */
export interface ReviewKeyword {
  id: number;
  keyword: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviews".
 */
export interface Review {
  id: number;
  title: string;
  rating: number;
  comment?: string | null;
  user: number | User;
  location: number | Location;
  keywords?: (number | ReviewKeyword)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "serverReports".
 */
export interface ServerReport {
  id: number;
  title: string;
  date: string;
  server: number | User;
  location: number | Location;
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "shiftTypes".
 */
export interface ShiftType {
  id: number;
  name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * System and facility upgrades tracking
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "upgrades".
 */
export interface Upgrade {
  id: number;
  /**
   * Name or title of the upgrade
   */
  name: string;
  /**
   * Location where upgrade is being implemented
   */
  location?: (number | null) | Location;
  /**
   * Type of upgrade being performed
   */
  upgrade_type: number | UpgradeType;
  status?: ('planned' | 'in_progress' | 'completed' | 'on_hold' | 'cancelled') | null;
  /**
   * Detailed description of the upgrade
   */
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Estimated or actual cost of the upgrade
   */
  cost?: number | null;
  /**
   * Vendor or contractor performing the upgrade
   */
  vendor?: (number | null) | Contact;
  /**
   * Scheduled start date for the upgrade
   */
  scheduled_date?: string | null;
  /**
   * Actual completion date
   */
  completion_date?: string | null;
  /**
   * Additional notes and updates about the upgrade
   */
  notes?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Related documents, photos, or files
   */
  attachments?: (number | Media)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage different types of upgrades (e.g., POS System, Kitchen Equipment).
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "upgrade-types".
 */
export interface UpgradeType {
  id: number;
  name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'contacts';
        value: number | Contact;
      } | null)
    | ({
        relationTo: 'dietary-restrictions';
        value: number | DietaryRestriction;
      } | null)
    | ({
        relationTo: 'drinkMenuItems';
        value: number | DrinkMenuItem;
      } | null)
    | ({
        relationTo: 'drinkSubcategories';
        value: number | DrinkSubcategory;
      } | null)
    | ({
        relationTo: 'employee-ratings';
        value: number | EmployeeRating;
      } | null)
    | ({
        relationTo: 'features';
        value: number | Feature;
      } | null)
    | ({
        relationTo: 'hotspot-logins';
        value: number | HotspotLogin;
      } | null)
    | ({
        relationTo: 'incidents';
        value: number | Incident;
      } | null)
    | ({
        relationTo: 'jobs';
        value: number | Job;
      } | null)
    | ({
        relationTo: 'locations';
        value: number | Location;
      } | null)
    | ({
        relationTo: 'managerReports';
        value: number | ManagerReport;
      } | null)
    | ({
        relationTo: 'messages';
        value: number | Message;
      } | null)
    | ({
        relationTo: 'message-types';
        value: number | MessageType;
      } | null)
    | ({
        relationTo: 'qrFeedback';
        value: number | QrFeedback;
      } | null)
    | ({
        relationTo: 'questions';
        value: number | Question;
      } | null)
    | ({
        relationTo: 'reviewKeywords';
        value: number | ReviewKeyword;
      } | null)
    | ({
        relationTo: 'reviews';
        value: number | Review;
      } | null)
    | ({
        relationTo: 'serverReports';
        value: number | ServerReport;
      } | null)
    | ({
        relationTo: 'shiftTypes';
        value: number | ShiftType;
      } | null)
    | ({
        relationTo: 'upgrades';
        value: number | Upgrade;
      } | null)
    | ({
        relationTo: 'upgrade-types';
        value: number | UpgradeType;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  first_name?: T;
  last_name?: T;
  phone?: T;
  employee_id?: T;
  roles?: T;
  status?: T;
  locations?: T;
  primary_location?: T;
  employment_details?:
    | T
    | {
        hire_date?: T;
        termination_date?: T;
        employment_type?: T;
        hourly_rate?: T;
      };
  profile_photo?: T;
  jobs?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  uploadedBy?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        card?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        tablet?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contacts_select".
 */
export interface ContactsSelect<T extends boolean = true> {
  first_name?: T;
  last_name?: T;
  email?: T;
  phone?: T;
  company?: T;
  contact_type?: T;
  toast_id?: T;
  brevo_id?: T;
  vip_id?: T;
  associated_locations?: T;
  associated_messages?: T;
  visit_frequency?: T;
  last_visit?: T;
  total_visits?: T;
  average_spend?: T;
  preferred_location?: T;
  notes?: T;
  marketing_consent?: T;
  birthday?: T;
  anniversary?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "dietary-restrictions_select".
 */
export interface DietaryRestrictionsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "drinkMenuItems_select".
 */
export interface DrinkMenuItemsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  price?: T;
  category?: T;
  active?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "drinkSubcategories_select".
 */
export interface DrinkSubcategoriesSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "employee-ratings_select".
 */
export interface EmployeeRatingsSelect<T extends boolean = true> {
  employee_id?: T;
  location_id?: T;
  data_date?: T;
  rating?: T;
  manager_report_id?: T;
  employee_notes?: T;
  internal_notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "features_select".
 */
export interface FeaturesSelect<T extends boolean = true> {
  name?: T;
  enabled?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "hotspot-logins_select".
 */
export interface HotspotLoginsSelect<T extends boolean = true> {
  location?: T;
  customer_name?: T;
  customer_email?: T;
  marketing_consent?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "incidents_select".
 */
export interface IncidentsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  date?: T;
  location?: T;
  reportedBy?: T;
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "jobs_select".
 */
export interface JobsSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "locations_select".
 */
export interface LocationsSelect<T extends boolean = true> {
  name?: T;
  address?: T;
  city?: T;
  state?: T;
  zip?: T;
  phone?: T;
  email?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "managerReports_select".
 */
export interface ManagerReportsSelect<T extends boolean = true> {
  title?: T;
  date?: T;
  manager?: T;
  location?: T;
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "messages_select".
 */
export interface MessagesSelect<T extends boolean = true> {
  status?: T;
  priority?: T;
  subject?: T;
  from_name?: T;
  from_email?: T;
  from_phone?: T;
  location?: T;
  message_type?: T;
  message?: T;
  internal_notes?: T;
  assigned_to?: T;
  response_sent?: T;
  response_date?: T;
  attachments?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "message-types_select".
 */
export interface MessageTypesSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "qrFeedback_select".
 */
export interface QrFeedbackSelect<T extends boolean = true> {
  rating?: T;
  comment?: T;
  location?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "questions_select".
 */
export interface QuestionsSelect<T extends boolean = true> {
  status?: T;
  sort?: T;
  question?: T;
  shift_timing?: T;
  shift_selection?: T;
  min_characters?: T;
  locations?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviewKeywords_select".
 */
export interface ReviewKeywordsSelect<T extends boolean = true> {
  keyword?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviews_select".
 */
export interface ReviewsSelect<T extends boolean = true> {
  title?: T;
  rating?: T;
  comment?: T;
  user?: T;
  location?: T;
  keywords?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "serverReports_select".
 */
export interface ServerReportsSelect<T extends boolean = true> {
  title?: T;
  date?: T;
  server?: T;
  location?: T;
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "shiftTypes_select".
 */
export interface ShiftTypesSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "upgrades_select".
 */
export interface UpgradesSelect<T extends boolean = true> {
  name?: T;
  location?: T;
  upgrade_type?: T;
  status?: T;
  description?: T;
  cost?: T;
  vendor?: T;
  scheduled_date?: T;
  completion_date?: T;
  notes?: T;
  attachments?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "upgrade-types_select".
 */
export interface UpgradeTypesSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}